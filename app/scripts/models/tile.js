/*
Tile represents the number tiles in each squared
*/
define([], function() {
    'use strict';

    // config: 
    // - position:
    //  - x: 0-2
    //  - y: 0-2
    // - parent: the parent squared
    // - value: 1-9 or undefined
    // - draft: list of guessed number (ex: [1, 3, 4]) or undefined
    // - isFixed: a boolean represents whether the number is generated by the board
    function Tile(config) {
        this.x = config.position.x;
        this.y = config.position.y;
        this.parent = config.parent;
        this.value = config.value;
        this.draft = config.draft;
        this.isFixed = (config.isFixed === undefined) ? false : config.isFixed;
        this.isSelected = (config.isSelected === undefined) ? false : config.isSelected;
    }

    Tile.prototype.updateValue = function(value) {
        this.value = value;
        this.draft = undefined;
    };

    Tile.prototype.updateDraft = function(value) {
        // Do not update draft if a value has been filled into the tile
        if (this.hasValue()) {
            return;
        }
        if (!this.draft) {
            this.draft = [];
        }
        var index = this.draft.indexOf(value);
        if (index === -1) {
            this.draft.push(value);
            this.draft.sort();
        } else {
            this.draft.splice(index, 1);
        }
    };

    Tile.prototype.clearDraft = function() {
        this.draft = undefined;
    };

    Tile.prototype.hasValue = function() {
        return this.value !== null;
    };

    Tile.prototype.hasDraft = function() {
        return this.draft && this.draft.length > 0;
    };

    return Tile;
});